@Test
void testGetPurgeConfig_Exception() {
    when(purgeService.getPurgeConfig(any())).thenThrow(new RuntimeException("Database error"));

    Exception exception = assertThrows(SharedServiceLayerException.class, () -> delegate.getPurgeConfig("123"));

    assertTrue(exception.getMessage().contains("Database error"));
}



@Test
void testUpdatePurgeConfig_Exception() {
    doThrow(new RuntimeException("Update failed")).when(purgeService).updatePurgeConfig(any(), any());

    Exception exception = assertThrows(SharedServiceLayerException.class, () -> delegate.updatePurgeConfig("123", testConfig));

    assertTrue(exception.getMessage().contains("Update failed"));
}



@Test
void testDeletePurgeConfig_Exception() {
    doThrow(new RuntimeException("Deletion error")).when(purgeService).deletePurgeConfig(any(), any());

    Exception exception = assertThrows(SharedServiceLayerException.class, () -> delegate.deletePurgeConfig("123", testConfig));

    assertTrue(exception.getMessage().contains("Deletion error"));
}