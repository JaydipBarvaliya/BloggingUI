public static int minRetailersToRelocate(List<Integer> regionStart, List<Integer> regionEnd) {
    int n = regionStart.size();

    // Step 1: Find the intersection range
    int maxStart = Integer.MIN_VALUE;
    int minEnd = Integer.MAX_VALUE;

    for (int i = 0; i < n; i++) {
        maxStart = Math.max(maxStart, regionStart.get(i));
        minEnd = Math.min(minEnd, regionEnd.get(i));
    }

    // Step 2: Count how many retailers intersect with [maxStart, minEnd]
    int inclusiveCount = 0;
    for (int i = 0; i < n; i++) {
        int start = regionStart.get(i);
        int end = regionEnd.get(i);

        if (start <= minEnd && end >= maxStart) {
            inclusiveCount++;
        }
    }

    // Step 3: Minimum retailers to relocate = total - inclusive ones
    return n - inclusiveCount;
}