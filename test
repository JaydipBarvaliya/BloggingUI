@Test
void testDeletePurgeConfig_ColumnNameMismatch() {
    ArchPurgeConfiguration entity = new ArchPurgeConfiguration();
    entity.setId(1L);
    entity.setPurgeTableName("testTable");
    entity.setPurgeColumnName("correctColumn"); // Expected column name
    entity.setTableType("testType");
    entity.setPurgeMessage("testMessage");
    entity.setRetentionMonths(12);

    PurgeConfigurationObj deletionPurgeConfig = new PurgeConfigurationObj();
    deletionPurgeConfig.setId(1);
    deletionPurgeConfig.setPurgeTableName("testTable");
    deletionPurgeConfig.setPurgeColumnName("wrongColumn"); // Mismatched column name
    deletionPurgeConfig.setTableType("testType");
    deletionPurgeConfig.setPurgeMessage("testMessage");
    deletionPurgeConfig.setRetentionMonths(12);

    when(purgeRepo.findById(1L)).thenReturn(Optional.of(entity));

    Exception exception = assertThrows(Exception.class, () -> purgeService.deletePurgeConfig("1", deletionPurgeConfig));

    assertEquals("Data available but mismatch.", exception.getMessage());
}