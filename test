@ExtendWith(MockitoExtension.class)
class ArchivalApiServiceTest {

    @Mock
    private ArchivalStorageMappingRepository repo;

    @InjectMocks
    private ArchivalApiService archApiService;

    @Test
    void test_getArchivalStorageMappingList_shouldReturnMappedList() {
        // Given
        String lobId = "LOB123";
        String docType = "FILE";
        String storageId = "STO456";

        ArchStorageMapping mapping = new ArchStorageMapping();
        List<ArchStorageMapping> mappings = Collections.singletonList(mapping);

        when(repo.findAll(any(Specification.class))).thenReturn(mappings);

        // Optional: Mock entityToDto() if it's internal and needs isolation
        ArchivalApiService spyService = Mockito.spy(archApiService);
        ArchivalStorageMappingObj mockDto = new ArchivalStorageMappingObj();

        doReturn(mockDto).when(spyService).entityToDto(mapping);

        // When
        List<ArchivalStorageMappingObj> result = spyService.getArchivalStorageMappingList(lobId, docType, storageId);

        // Then
        assertNotNull(result);
        assertEquals(1, result.size());
        assertSame(mockDto, result.get(0));
    }
}