public static int minRetailersToRelocate(List<Integer> regionStart, List<Integer> regionEnd) {
    int n = regionStart.size();
    int minMoves = n;

    for (int i = 0; i < n; i++) {
        int count = 0;
        int curStart = regionStart.get(i);
        int curEnd = regionEnd.get(i);

        for (int j = 0; j < n; j++) {
            if (i == j) continue;

            int otherStart = regionStart.get(j);
            int otherEnd = regionEnd.get(j);

            // Check if current region intersects with this one
            if (curStart <= otherEnd && curEnd >= otherStart) {
                count++;
            }
        }

        // +1 for the region itself
        int inclusiveGroupSize = count + 1;
        minMoves = Math.min(minMoves, n - inclusiveGroupSize);
    }

    return minMoves;
}