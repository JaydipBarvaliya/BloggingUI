// Solution 2 (Attempted Optimization):
// Idea: Instead of checking every region pair for overlap (O(n^2)),
// we sort intervals by start time and use a min-heap to track ongoing overlaps.
// At each step, we remove intervals from the heap that end before the current start.
// The size of the heap represents the size of the current overlapping group.
// We return n - maxOverlapGroupSize as the minimum number of retailers to relocate.
//
// Time Complexity: O(n log n) - due to sorting and heap operations
// Space Complexity: O(n) - to store all interval end times in the heap
//
// Note: This logic correctly tracks max overlaps but fails for some edge cases
// where overlapping at a single point doesn't guarantee full intersection with others.