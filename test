@Test
void testDeletePurgeConfig_Success() throws Exception {
    // Create a fully matching entity
    ArchPurgeConfiguration entity = new ArchPurgeConfiguration();
    entity.setId(1L);
    entity.setPurgeTableName("testTable");
    entity.setPurgeColumnName("testColumn");
    entity.setTableType("testType");
    entity.setPurgeMessage("testMessage");
    entity.setRetentionMonths(12);

    // Create a matching test input
    PurgeConfigurationObj deletionPurgeConfig = new PurgeConfigurationObj();
    deletionPurgeConfig.setId(1);
    deletionPurgeConfig.setPurgeTableName("testTable");
    deletionPurgeConfig.setPurgeColumnName("testColumn");
    deletionPurgeConfig.setTableType("testType");
    deletionPurgeConfig.setPurgeMessage("testMessage");
    deletionPurgeConfig.setRetentionMonths(12);

    // Mock repository to return the entity when searched by ID
    when(purgeRepo.findById(1L)).thenReturn(Optional.of(entity));

    // Call the delete method
    purgeService.deletePurgeConfig("1", deletionPurgeConfig);

    // Verify that deleteById was called
    verify(purgeRepo, times(1)).deleteById(1L);
}






@Test
void testUpdatePurgeConfig_Success() throws Exception {
    ArchPurgeConfiguration existingEntity = new ArchPurgeConfiguration();
    existingEntity.setId(1L);
    existingEntity.setPurgeTableName("oldTable");
    existingEntity.setPurgeColumnName("oldColumn");
    existingEntity.setTableType("oldType");
    existingEntity.setPurgeMessage("oldMessage");
    existingEntity.setRetentionMonths(6);

    PurgeConfigurationObj updatedConfig = new PurgeConfigurationObj();
    updatedConfig.setId(1);
    updatedConfig.setPurgeTableName("newTable");
    updatedConfig.setPurgeColumnName("newColumn");
    updatedConfig.setTableType("newType");
    updatedConfig.setPurgeMessage("newMessage");
    updatedConfig.setRetentionMonths(12);

    when(purgeRepo.findById(1L)).thenReturn(Optional.of(existingEntity));

    purgeService.updatePurgeConfig("1", updatedConfig);

    verify(purgeRepo, times(1)).saveAndFlush(any());
}
