@ExtendWith(MockitoExtension.class)
public class ClientAppsApiServiceTest {

    @InjectMocks
    private ClientAppsApiService clientAppsApiService;

    @Mock
    private ClientAppConfigurationRepository repo;

    @Mock
    private ClientAppConfigSpecifications specifications;

    @Mock
    private ClientAppConfiguration configEntity;

    @Test
    void testGetClientAppConfigList_WithData() {
        // Arrange
        String lobId = "101";
        String clientId = "202";
        Specification<ClientAppConfiguration> spec = (root, query, cb) -> null;

        ClientAppsObj dto = new ClientAppsObj();
        List<ClientAppConfiguration> configList = List.of(configEntity);

        // Mock dynamic query and repo
        when(ClientAppConfigSpecifications.dynamicQuery(lobId, clientId)).thenReturn(spec);
        when(repo.findAll(spec)).thenReturn(configList);
        when(clientAppsApiService.entityToDto(configEntity)).thenReturn(dto);

        // Act
        List<ClientAppsObj> result = clientAppsApiService.getClientAppConfigList(lobId, clientId);

        // Assert
        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals(dto, result.get(0));
    }
}