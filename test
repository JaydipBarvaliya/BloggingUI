import java.lang.reflect.Field;

public void deletePurgeConfig(String id, PurgeConfigurationObj deletionPurgeConfig) throws Exception {
    Optional<ArchPurgeConfiguration> entity = this.purgeRepo.findById(Long.valueOf(id));

    if (entity.isEmpty()) {
        log.error("Data not available to delete for id={}", id);
        throw new Exception(MessageFormat.format("Data not available to delete for id={0}", id));
    }

    ArchPurgeConfiguration entityObj = entity.get();

    // Compare all fields using reflection
    for (Field field : ArchPurgeConfiguration.class.getDeclaredFields()) {
        field.setAccessible(true); // Allow access to private fields
        Object entityValue = field.get(entityObj);
        Object configValue = field.get(deletionPurgeConfig);

        if (!Objects.equals(entityValue, configValue)) {
            throw new Exception("Deletion failed: Data mismatch in " + field.getName());
        }
    }

    // Proceed with deletion
    this.purgeRepo.deleteById(Long.valueOf(id));
    log.debug("Record deleted successfully for id {}", id);
}