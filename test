@ExtendWith(MockitoExtension.class)
class ArchivalApiServiceTest {

    @Mock
    private ArchivalStorageMappingRepository repo;

    @InjectMocks
    private ArchivalApiService archivalApiService;

    @Test
    void test_createArchivalStorageMapping_shouldThrowSharedServiceLayerException() {
        // Given
        ArchivalStorageMappingObj mockInput = new ArchivalStorageMappingObj();
        ArchStorageMapping dto = new ArchStorageMapping(); // Assuming this is the entity class
        RuntimeException simulatedException = new RuntimeException("DB Error");

        // Mock mapper conversion if necessary
        ArchStorageObjToDtoMapper.MAPPER = mock(ArchStorageObjToDtoMapper.class);
        when(ArchStorageObjToDtoMapper.MAPPER.toDto(mockInput)).thenReturn(dto);
        when(repo.saveAndFlush(any())).thenThrow(simulatedException);

        // When / Then
        SharedServiceLayerException thrown = assertThrows(
                SharedServiceLayerException.class,
                () -> archivalApiService.createArchivalStorageMapping(mockInput)
        );

        assertTrue(thrown.getMessage().contains("Failed to create archival storage mapping"));
    }
}