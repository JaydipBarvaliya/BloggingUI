public Map<String, Boolean> getMismatches(ClientAppsObj inputObj, ClientAppConfiguration entity) {
    Map<String, Boolean> result = new HashMap<>();

    if (inputObj == null || entity == null) {
        result.put("NullCheck", false);
        return result;
    }

    result.put("clientId", Objects.equals(inputObj.getClientId(), entity.getClientId()));
    result.put("lobId", Objects.equals(inputObj.getLobId(), entity.getLobId()));
    // Add more fields as needed:
    // result.put("appCode", Objects.equals(inputObj.getAppCode(), entity.getAppCode()));
    // result.put("status", Objects.equals(inputObj.getStatus(), entity.getStatus()));

    return result;
}


Map<String, Boolean> mismatches = getMismatches(clientAppsObj, entity);

for (Map.Entry<String, Boolean> entry : mismatches.entrySet()) {
    if (Boolean.FALSE.equals(entry.getValue())) {
        log.error("Unauthorized delete attempt: Mismatch in field {}", entry.getKey());
        throw new IllegalStateException("Unauthorized delete: Mismatch in " + entry.getKey());
    }
}

this.repo.deleteById(id);
log.info("ClientApp Config for id {} deleted successfully", id);
